{"ast":null,"code":"var _jsxFileName = \"/Users/oishichowdhury/Desktop/backend/frontend/src/Pages/Card.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport getEmployee from '../../../CrudAPI/src/employee/routes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Card = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // Fetch data from an API\n    fetch(getEmployee).then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      setData(data);\n      setLoading(false);\n    }).catch(error => {\n      setError(error);\n      setLoading(false);\n    });\n  }, []); // Empty dependency array means this effect runs once when the component mounts\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"max-w-md mx-auto bg-white rounded-xl shadow-md overflow-hidden md:max-w-2xl\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"md:flex\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"md:shrink-0\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          class: \"h-48 w-full object-cover md:h-full md:w-48\",\n          src: \"https://loremflickr.com/g/320/240/team\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"p-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"uppercase tracking-wide text-sm text-indigo-500 font-semibold\",\n          children: \"Company retreats\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          class: \"block mt-1 text-lg leading-tight font-medium text-black hover:underline\",\n          children: \"Incredible accommodation for your team\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          class: \"mt-2 text-slate-500\",\n          children: \"Looking to take your team away on a retreat to enjoy awesome food and take in some sunshine? We have a list of places to do just that.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(Card, \"C4fiAW6C7RZgaKDoEXQgZpbuUZg=\");\n_c = Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","useState","useEffect","getEmployee","jsxDEV","_jsxDEV","Card","_s","data","setData","loading","setLoading","error","setError","fetch","then","response","ok","Error","json","catch","children","fileName","_jsxFileName","lineNumber","columnNumber","message","class","src","href","_c","$RefreshReg$"],"sources":["/Users/oishichowdhury/Desktop/backend/frontend/src/Pages/Card.jsx"],"sourcesContent":["import React from 'react'\nimport { useState, useEffect } from 'react'\nimport getEmployee from '../../../CrudAPI/src/employee/routes'\n\nexport const Card = () => {\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        // Fetch data from an API\n        fetch(getEmployee)\n            .then((response) => {\n                if (!response.ok) {\n                    throw new Error('Network response was not ok');\n                }\n                return response.json();\n            })\n            .then((data) => {\n                setData(data);\n                setLoading(false);\n            })\n            .catch((error) => {\n                setError(error);\n                setLoading(false);\n            });\n    }, []); // Empty dependency array means this effect runs once when the component mounts\n\n    if (loading) return <p>Loading...</p>;\n    if (error) return <p>Error: {error.message}</p>;\n\n  return (\n    <div class=\"max-w-md mx-auto bg-white rounded-xl shadow-md overflow-hidden md:max-w-2xl\">\n    <div class=\"md:flex\">\n        <div class=\"md:shrink-0\">\n            <img class=\"h-48 w-full object-cover md:h-full md:w-48\" src=\"https://loremflickr.com/g/320/240/team\"/>\n        </div>\n        <div class=\"p-8\">\n            <div class=\"uppercase tracking-wide text-sm text-indigo-500 font-semibold\">Company retreats</div>\n            <a href=\"#\" class=\"block mt-1 text-lg leading-tight font-medium text-black hover:underline\">Incredible\n                accommodation for your team\n            </a>\n            <p class=\"mt-2 text-slate-500\">Looking to take your team away on a retreat to enjoy awesome food and take in\n                some sunshine? We have a list of places to do just that.\n            </p>\n        </div>\n    </div>\n</div>\n  )\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}